#parse("com/amazonaws/util/awsclientgenerator/velocity/cfamily/Attribution.vm")

#set($metadata = $serviceModel.metadata)
#set($rootNamespace = $serviceModel.namespace)
#set($serviceNamespace = $metadata.namespace)
\#include <aws/${metadata.projectName}/model/${typeInfo.className}.h>
\#include <aws/core/AmazonWebServiceResult.h>
#if($shape.hasQueryStringMembers())
\#include <aws/core/http/URI.h>
#end
#foreach($header in $typeInfo.sourceIncludes)
\#include $header
#end

\#include <utility>

using namespace ${rootNamespace}::${serviceNamespace}::Model;
using namespace Aws::Utils::Stream;
using namespace Aws::Utils;
#if($shape.hasQueryStringMembers())
using namespace Aws::Http;
#end
using namespace Aws;

#set($useRequiredField = true)
#parse("com/amazonaws/util/awsclientgenerator/velocity/cpp/ModelClassMembersGenerateInitializers.vm")
${typeInfo.className}::${typeInfo.className}()$initializers
{
}

#if($shape.hasEventStreamMembers())
\#include <aws/event-stream/event_stream.h>
std::shared_ptr<Aws::IOStream> ${typeInfo.className}::GetBody() const
{
    // TODO: implement this
    /*aws_event_stream_message message;
    aws_byte_buf payload;
    auto res =  aws_event_stream_message_init(&message, aws_default_allocator(), nullptr, &payload);

    if (!payload.empty())
    {
        std::shared_ptr<Aws::IOStream> payloadBody = Aws::MakeShared<Aws::StringStream>("AmazonSerializableWebServiceRequest");
        *payloadBody << payload;
        return payloadBody;
    }
    */

    return nullptr;
}
#end

#if($shape.hasQueryStringMembers())
#parse("com/amazonaws/util/awsclientgenerator/velocity/cpp/AddQueryStringParametersToRequest.vm")
#end

#if($shape.hasHeaderMembers() || $metadata.targetPrefix)
Aws::Http::HeaderValueCollection ${typeInfo.className}::GetRequestSpecificHeaders() const
{
  Aws::Http::HeaderValueCollection headers;
#if($metadata.targetPrefix)
  headers.insert(Aws::Http::HeaderValuePair("X-Amz-Target", "${metadata.targetPrefix}.${CppViewHelper.computeOperationNameFromInputOutputShape($shape.name)}"));
#end
#if($metadata.additionalHeaders)
#foreach($headerEntry in $metadata.additionalHeaders.entrySet())
  headers.insert(Aws::Http::HeaderValuePair("${headerEntry.key}", "${headerEntry.value}"));
#end

#end
#set($useRequiredField = true)
#parse("com/amazonaws/util/awsclientgenerator/velocity/cpp/ModelClassHeaderMembersSource.vm")
  return headers;

}
#end
